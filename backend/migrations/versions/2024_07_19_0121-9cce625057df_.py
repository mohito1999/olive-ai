"""empty message

Revision ID: 9cce625057df
Revises: 84c460d123b0
Create Date: 2024-07-19 01:21:39.272166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9cce625057df'
down_revision: Union[str, None] = '84c460d123b0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('mobile_number', sa.Text(), nullable=True),
    sa.Column('auth_provider', sa.Text(), nullable=False, server_default=sa.text("'SUPABASE'")),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('organization_id', sa.Text(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp_utc()'), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp_utc()'), nullable=True),
    sa.Column('updated_by', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['auth.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute(
        """
        CREATE OR REPLACE TRIGGER set_timestamp_user
        BEFORE UPDATE ON "user"
        FOR EACH ROW
        EXECUTE FUNCTION trigger_set_timestamp_modify();
        """
    )
    with open('migrations/functions/supabase_user_sync.sql', 'r') as fd:
        statements = fd.read()
        for statement in statements.split("--bun:split"):
            op.execute(statement)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TRIGGER IF EXISTS on_auth_user_created on auth.users')
    op.execute('DROP FUNCTION IF EXISTS public.handle_new_user')
    op.execute('DROP TRIGGER IF EXISTS set_timestamp_user on "user"')
    op.drop_table('user')
    # ### end Alembic commands ###
