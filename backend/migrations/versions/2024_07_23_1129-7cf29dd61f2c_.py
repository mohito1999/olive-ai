"""empty message

Revision ID: 7cf29dd61f2c
Revises: 94698768b7c1
Create Date: 2024-07-23 11:29:03.715309

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7cf29dd61f2c'
down_revision: Union[str, None] = '94698768b7c1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('id', sa.Text(), server_default=sa.text("id_generator('customer')"), nullable=False),
    sa.Column('organization_id', sa.Text(), nullable=False),
    sa.Column('customer_set_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('mobile_number', sa.Text(), nullable=False),
    sa.Column('customer_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp_utc()'), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp_utc()'), nullable=True),
    sa.Column('updated_by', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['customer_set_id'], ['customer_set.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('customer_set_id', 'mobile_number', name='customer_set_id_mobile_number_uc')
    )
    op.execute(
        """
        CREATE OR REPLACE TRIGGER set_timestamp_customer
        BEFORE UPDATE ON "customer"
        FOR EACH ROW
        EXECUTE FUNCTION trigger_set_timestamp_modify();
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TRIGGER IF EXISTS set_timestamp_customer on "customer"')
    op.drop_table('customer')
    # ### end Alembic commands ###
